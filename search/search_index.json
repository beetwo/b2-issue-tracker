{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Toucan Issue Tracker Introduction The Toucan issue tracker is a web application that aims to enable cooperation between humanitarian organisations during crisis situations in a given area. It does so by providing a map view that links to issues and conversations. Issues can be opened/closed/re-opened, similar to the way a technical issue tracker would work. Features Map views for tracking individual issues and organization quarters Conversations between users Participants of conversations can be notified of changes and new messages Notifications of new issues can bet set based on geographic distance Glossary In order to understand how the pieces in Toucan fit together it is useful to define the actors in the system and the vocabulary used. User : A user of the Toucan platform. Organization : A collective of users working together on the Toucan platform. Organizations have regular members and administrators. Regular members can create issues on behalf of their organisation. Administrators can invite further members to the organization and change certain settings for their organisation (such as description). Issue : An issues is a support request that is posted by a user on behalf of an organisation. It is always linked to a location. An issue has a type, such as medical, shelter etc.","title":"Home"},{"location":"#toucan-issue-tracker","text":"","title":"Toucan Issue Tracker"},{"location":"#introduction","text":"The Toucan issue tracker is a web application that aims to enable cooperation between humanitarian organisations during crisis situations in a given area. It does so by providing a map view that links to issues and conversations. Issues can be opened/closed/re-opened, similar to the way a technical issue tracker would work.","title":"Introduction"},{"location":"#features","text":"Map views for tracking individual issues and organization quarters Conversations between users Participants of conversations can be notified of changes and new messages Notifications of new issues can bet set based on geographic distance","title":"Features"},{"location":"#glossary","text":"In order to understand how the pieces in Toucan fit together it is useful to define the actors in the system and the vocabulary used. User : A user of the Toucan platform. Organization : A collective of users working together on the Toucan platform. Organizations have regular members and administrators. Regular members can create issues on behalf of their organisation. Administrators can invite further members to the organization and change certain settings for their organisation (such as description). Issue : An issues is a support request that is posted by a user on behalf of an organisation. It is always linked to a location. An issue has a type, such as medical, shelter etc.","title":"Glossary"},{"location":"about/","text":"About Somebody please fill me up with some text","title":"About"},{"location":"about/#about","text":"Somebody please fill me up with some text","title":"About"},{"location":"developers/local_installation/","text":"Local Installation This guide assumes a working knowledge of command line usage and familiarity with python tooling Prerequisites for a local installation. Python 3 Pipenv PostgreSQL (>=9.4) PostGIS Redis Node.js Backend Dependencies To install the required packages change into the project directory and execute pipenv install This command creates the virtual environment and installs all dependencies. To activate the created environment type: pipenv shell Under Linux it might be necessary to install additional dev-packages such as libjpeg-dev , zlibc , python-dev and libpg-dev through your distributions package manager. Set a secret key cp toucan_conf/settings/secrets.example.py toucan_conf/settings/secrets.py Open toucan_conf/settings/secrets.py and set SECRET_KEY to some string. Load the default categories While not required it is strongly suggested to add some default categories for your installation. These can be added to/changed/deleted from the administrative interface. ./manage.py loaddata toucan/fixtures/issueTypes.json Database The application requires a PostgreSQL installation (>=9.4) with a database named toucan . Configure the database connection by extending the DATABASES object in issues_tracker/settings/__init__.py : DATABASES = { 'default': { 'ENGINE': 'django.contrib.gis.db.backends.postgis', 'NAME': 'toucan', 'USER': 'postgres', 'PASSWORD': 'postgres', 'HOST': 'localhost', 'PORT': 5434 } } To create the database scheme run the migrations (this might require PostgreSQL superuser rights to install the postgis extension): ./manage.py migrate Build Frontend The frontend part of the code is to be found in the 'frontend' folder. To install the build tools and dependencies of the frontend issue the following commands from within that folder. Note: use either the yarn or the npm commands, both should result in the same packages being installed. npm install or yarn install Finally build the frontend assets npm run build-dev or yarn build-dev Development Frontend Start the development server so that the frontend is automatically rebuilt when a file is modified. In the ./frontend folder run the following command npm run dev or yarn dev For fearless frontend developers there is also the option to enable hot module replacement. npm run hmr or yarn hmr This will start a server to do the static file hosting on 127.0.0.1:8080 and skip the django dev server for the built frontend files. Frontend Maps By default the openstreetmaps service is used as the tile source for the mapping components. If you intend to use mapbox tiles during development create a .env file inside the frontend folder and add a line similar to this one to it: MAPBOX_API_KEY=<mapbox-api-key> The API key can be found inside your mapbox account's settings.","title":"Local Installation"},{"location":"developers/local_installation/#local-installation","text":"This guide assumes a working knowledge of command line usage and familiarity with python tooling","title":"Local Installation"},{"location":"developers/local_installation/#prerequisites-for-a-local-installation","text":"Python 3 Pipenv PostgreSQL (>=9.4) PostGIS Redis Node.js","title":"Prerequisites for a local installation."},{"location":"developers/local_installation/#backend-dependencies","text":"To install the required packages change into the project directory and execute pipenv install This command creates the virtual environment and installs all dependencies. To activate the created environment type: pipenv shell Under Linux it might be necessary to install additional dev-packages such as libjpeg-dev , zlibc , python-dev and libpg-dev through your distributions package manager.","title":"Backend Dependencies"},{"location":"developers/local_installation/#set-a-secret-key","text":"cp toucan_conf/settings/secrets.example.py toucan_conf/settings/secrets.py Open toucan_conf/settings/secrets.py and set SECRET_KEY to some string.","title":"Set a secret key"},{"location":"developers/local_installation/#load-the-default-categories","text":"While not required it is strongly suggested to add some default categories for your installation. These can be added to/changed/deleted from the administrative interface. ./manage.py loaddata toucan/fixtures/issueTypes.json","title":"Load the default categories"},{"location":"developers/local_installation/#database","text":"The application requires a PostgreSQL installation (>=9.4) with a database named toucan . Configure the database connection by extending the DATABASES object in issues_tracker/settings/__init__.py : DATABASES = { 'default': { 'ENGINE': 'django.contrib.gis.db.backends.postgis', 'NAME': 'toucan', 'USER': 'postgres', 'PASSWORD': 'postgres', 'HOST': 'localhost', 'PORT': 5434 } } To create the database scheme run the migrations (this might require PostgreSQL superuser rights to install the postgis extension): ./manage.py migrate","title":"Database"},{"location":"developers/local_installation/#build-frontend","text":"The frontend part of the code is to be found in the 'frontend' folder. To install the build tools and dependencies of the frontend issue the following commands from within that folder. Note: use either the yarn or the npm commands, both should result in the same packages being installed. npm install or yarn install Finally build the frontend assets npm run build-dev or yarn build-dev","title":"Build Frontend"},{"location":"developers/local_installation/#development","text":"","title":"Development"},{"location":"developers/local_installation/#frontend","text":"Start the development server so that the frontend is automatically rebuilt when a file is modified. In the ./frontend folder run the following command npm run dev or yarn dev For fearless frontend developers there is also the option to enable hot module replacement. npm run hmr or yarn hmr This will start a server to do the static file hosting on 127.0.0.1:8080 and skip the django dev server for the built frontend files.","title":"Frontend"},{"location":"developers/local_installation/#frontend-maps","text":"By default the openstreetmaps service is used as the tile source for the mapping components. If you intend to use mapbox tiles during development create a .env file inside the frontend folder and add a line similar to this one to it: MAPBOX_API_KEY=<mapbox-api-key> The API key can be found inside your mapbox account's settings.","title":"Frontend Maps"},{"location":"developers/using-docker/","text":"","title":"Using Docker"},{"location":"planning/","text":"Toucan Project Planning Modifications for SOS Children's Villages International Some meetings were held in early 2018 to adopt Toucan to the needs of SOS Children's Villages International. A number of feature requests were opened on the Github Issue Tracker and some updated Screens created. These screens can be seen on InVision here .","title":"Project Planning"},{"location":"planning/#toucan-project-planning","text":"","title":"Toucan Project Planning"},{"location":"planning/#modifications-for-sos-childrens-villages-international","text":"Some meetings were held in early 2018 to adopt Toucan to the needs of SOS Children's Villages International. A number of feature requests were opened on the Github Issue Tracker and some updated Screens created. These screens can be seen on InVision here .","title":"Modifications for SOS Children's Villages International"},{"location":"screenshots/","text":"Screenshots These are some screenshots of an actual deployment of Toucan","title":"Screenshots"},{"location":"screenshots/#screenshots","text":"These are some screenshots of an actual deployment of Toucan","title":"Screenshots"},{"location":"user-guide/features/","text":"Features Currently a fully configured Toucan deployment offers the following features: user/organisation logic with access control per user configurable notification system based on email and text messages ( SMS ) twitter like mentions of usernames and organisation names geographic subscriptions let users be notified of new issues in a geographic range (point + radius) The Overview Page The main view is split between a map and a issue list view. The map on the left hand side visualizes the locations of issues. The right hand side of the","title":"Features"},{"location":"user-guide/features/#features","text":"Currently a fully configured Toucan deployment offers the following features: user/organisation logic with access control per user configurable notification system based on email and text messages ( SMS ) twitter like mentions of usernames and organisation names geographic subscriptions let users be notified of new issues in a geographic range (point + radius)","title":"Features"},{"location":"user-guide/features/#the-overview-page","text":"The main view is split between a map and a issue list view. The map on the left hand side visualizes the locations of issues. The right hand side of the","title":"The Overview Page"}]}